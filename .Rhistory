find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
add2 <- function(x,y) {
x + y
}
add2(3,5)
above <- function(x,n) {
use <- x > n
x[use]
}
x <- 1:20
above(x,12)
colummMean <- function(y) {
numCol <- ncol(y)
means <- numeric(numCol)
for(i in 1:numCol) {
means[i] <- mean(y[, i])
}
means
}
y <- 1:20
dim(y) <- c(4,5)
columnMean(y)
columnMean <- function(y) {
numCol <- ncol(y)
means <- numeric(numCol)
for(i in 1:numCol) {
means[i] <- mean(y[, i])
}
means
}
columnMean(y)
library(swirl)
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 = 7)
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical ("twins", "twins")
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2,4,5))
submit()
swirl()
options(editor = "internal")
library(swirl)
swirl()
submit)()
submit()
boring_function("My first function!")
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
ars(remainder)
args(remainder)
submit()
evaluate(sd(c(1.4,3.6,7.9,8.8)))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){x[1]}, c(8,4,0))
evaluate(function(x){x[3]}, c(8,4,0))
evaluate(function(x){x[length(x)]}, c(8,4,0))
?paste
paste("Programming", "is" "fun!")
paste("Programming", "is", "fun!")
submit()
telegram("SWIRL is so neat!")
submit()
mad_libs(place = "Eiffel Tower", adjective = "wonderful", noun = "lamp")
submit()
submit()
"I" %p% "love"
"I" %p% "love" %p% "R!"
library(swirl)
swirl()
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
t4 <- strptime(t3, %B, %d, %Y, %H:%M)
t4 <- strptime(t3, %B %d, %Y %H:%M)
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = "days")
?hclust
?dist
?hclust
args(hclust)
?dist
?daisy
install.packages("cluster")
library(cluster)
?daisy
library(swirl)
swirl()
head(flags)
dim(flags)
viewinfo()
class(flgas)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head()
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
table(flags$animate, flags$landmass, mean)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
swirl()
?cat
library(datasets)
data(iris)
?iris
tapply(iris$Sepal.Length, iris$virginia, mean)
?split
sapply(split(iris, iris$Species), mean)
s <- split(iris, iris$Species)
s
sapply(s$virginica$Sepal.Length, mean)
sapply(s$Sepal.Length, mean)
s$virginica$Sepal.Length
class(s$virginica, Sepal.Length)
class(s$virginica$Sepal.Length)
mean(s$virginica$Sepal.Length)
colNames(iris)
colnames(iris)
?colMnea
?colMeans
data(mtcars)
?mtcars
?with
tapply(mtcars$mpg, mtcars$cyl, mean)
?mtcars
tapply(mtcars$hp, mtcars$cyl, mean)
hp_cyl <- tapply(mtcars$mpg, mtcars$cyl, mean)
hp_cyl$8 - hp_cyl$4
hp_cyl[3]
hp_cyl
hp_cyl <- tapply(mtcars$hp, mtcars$cyl, mean)
hp_cyl[3] - hp_cyl[1]
209.21429 - 82.63636
with(mtcars, tapply(mpg, cyl, mean))
lapply(mtcars, mean)
apply(mtcars, 2, mean)
tapply(iris$Sepal.Length, iris$Species, mean)
setwd("~/DataScienceCourse/Course2/Week3Project/ProgrammingAssignment2")
source("cachematrix.R")
d <- matrix(c(1,2,3,4,5,6,7,8,9), nrow = 3, ncol = 3)
d
m <- makeCacheMatrix(d)
cacheSolve(m)
cacheSolve(d)
d
d
m
cacheSolve(m)
d$get()
m <- matrix(c(1,2,3,4,5,6,7,8,9), nrow = 3, ncol = 3)
m
l <- makeCacheMatrix(m)
l
l$get()
cacheSolve(l)
solve(m)
?solve
m
class(m)
m <- matrix(c(1,3,5,7,9,2,4,6,8), nrow = 3, ncol = 3)
makeCacheMatrix(m)
l <- makeCacheMatrix(m)
cacheSolve(l)
